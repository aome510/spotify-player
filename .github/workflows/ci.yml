name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: master

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust-ci:
    if: github.event.pull_request.draft != true
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libssl-dev libasound2-dev libdbus-1-dev
        if: ${{ runner.os == 'Linux' }}
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
        name: Cargo Test
        with:
          command: test
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        name: Cargo Format
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/clippy-check@v1
        name: Cargo Clippy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings
