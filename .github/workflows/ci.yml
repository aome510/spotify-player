name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: master

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_FEATURES: "rodio-backend,lyric-finder,media-control,image,notify,clipboard"

jobs:
  rust-ci:
    if: github.event.pull_request.draft != true

    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libssl-dev libasound2-dev libdbus-1-dev libxcb-shape0-dev libxcb-xfixes0-dev
        if: ${{ runner.os == 'Linux' }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Cache cargo deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy, rustfmt

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features ${{ env.RUST_FEATURES }}

      - name: Cargo format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo clippy with all features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --no-default-features --features ${{ env.RUST_FEATURES }} -- -D warnings

      - name: Cargo clippy without features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --no-default-features -- -D warnings
