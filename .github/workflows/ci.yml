name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: master

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_FEATURES: "rodio-backend,lyric-finder,media-control,image,notify,clipboard"
  LINUX_PACKAGES: "libssl-dev libasound2-dev libdbus-1-dev libxcb-shape0-dev libxcb-xfixes0-dev"

jobs:
   msrv:
    if: github.event.pull_request.draft != true
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
        include:
          - os: ubuntu-latest
            OS_SPECIFIC_FEATURES: ",daemon, sixel"
          - os: macOS-latest
            OS_SPECIFIC_FEATURES: ",sixel"

    runs-on: ${{ matrix.os }}
    steps:
      - run: sudo apt-get update && sudo apt-get install ${{ env.LINUX_PACKAGES }}
        if: ${{ runner.os == 'Linux'}}
      - uses: actions/checkout@v4
      
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack

      - uses: Swatinem/rust-cache@v2

      - run: cargo hack check --rust-version --package spotify_player --all-targets --profile ci --features "${{ env.RUST_FEATURES }} ${{ matrix.OS_SPECIFIC_FEATURES }}"

   rust-ci:
    if: github.event.pull_request.draft != true

    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
        toolchain: [stable]
        include:
          - os: ubuntu-latest
            toolchain: beta
            OS_SPECIFIC_FEATURES: "daemon sixel"
          - os: ubuntu-latest
            OS_SPECIFIC_FEATURES: "daemon sixel"
          - os: macOS-latest
            OS_SPECIFIC_FEATURES: "sixel"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install ${{ env.LINUX_PACKAGES }}
        if: ${{ runner.os == 'Linux' }}

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        id: install_toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Cargo format
        run: cargo fmt --all -- --check

      - name: Cargo clippy without features
        run: cargo clippy --no-default-features --profile ci -- -D warnings

      - name: Cargo clippy with all features
        run: cargo clippy --no-default-features --profile ci --features "${{ env.RUST_FEATURES }} ${{ matrix.OS_SPECIFIC_FEATURES }}" -- -D warnings

      - name: Cargo test
        run: cargo test --no-default-features --profile ci --features "${{ env.RUST_FEATURES }} ${{ matrix.OS_SPECIFIC_FEATURES }}"

