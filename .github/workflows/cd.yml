name: CD

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish:
    name: Publishing ${{ matrix.build-target }}
    runs-on: ${{ matrix.os }}
    container: $${ matrix.container }
    strategy:
      matrix:
        build-target:
          [macos-x86_64, macos-arm64, linux-x86_64, linux-arm64, windows-x86_64]
        include:
          - build-target: macos-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            container:
              image: rust:latest

          - build-target: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
            container:
              image: rust:latest
              options: "--platform linux/arm64/v8"

          - build-target: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            container:
              image: rust:latest

          - build-target: linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            container:
              image: rust:latest
              options: "--platform linux/arm64/v8"

          - build-target: windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            container:
              image: rust:latest

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libssl-dev libasound2-dev libdbus-1-dev
        if: ${{ runner.os == 'Linux' }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          case ${{ matrix.target }} in
          *-pc-windows-*)
            7z -y a spotify_player-${{ matrix.target }}.zip spotify_player.exe
            sha256sum spotify_player-${{ matrix.target }}.zip > spotify_player-${{ matrix.target }}.sha256
            ;;
          *)
            tar czvf spotify_player-${{ matrix.target }}.tar.gz spotify_player
            shasum -a 256 spotify_player-${{ matrix.target }}.tar.gz > spotify_player-${{ matrix.target }}.sha256
            ;;
          esac;

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/spotify_player-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
