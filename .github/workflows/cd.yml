name: CD

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish:
    name: Publishing ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            container: rust
            dependencies: "libssl-dev libasound2-dev libdbus-1-dev libxcb-shape0-dev libxcb-xfixes0-dev"
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            container: rustembedded/cross:aarch64-unknown-linux-gnu
            cross_arch: "arm64"
            pkg_config_path: "/usr/lib/aarch64-linux-gnu/pkgconfig/"
            dependencies: "libssl-dev:arm64 libasound2-dev:arm64 libdbus-1-dev:arm64 libxcb-shape0-dev:arm64 libxcb-xfixes0-dev:arm64"
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            cross_arch: "armhf"
            pkg_config_path: "/usr/lib/arm-linux-gnueabihf/pkgconfig/"
            container: rustembedded/cross:armv7-unknown-linux-gnueabihf
            dependencies: "libssl-dev:armhf libasound2-dev:armhf libdbus-1-dev:armhf libxcb-shape0-dev:armhf libxcb-xfixes0-dev:armhf"
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up cross compilation
        if: matrix.cross_arch
        run: |
          dpkg --add-architecture ${{ matrix.cross_arch }}
          echo "PKG_CONFIG_PATH=${{ matrix.pkg_config_path }}" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV

      - name: Install Linux dependencies
        if: matrix.dependencies
        run: apt update && apt install -y ${{ matrix.dependencies }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          case ${{ matrix.target }} in
          *-pc-windows-*)
            7z -y a spotify_player-${{ matrix.target }}.zip spotify_player.exe
            sha256sum spotify_player-${{ matrix.target }}.zip > spotify_player-${{ matrix.target }}.sha256
            ;;
          *)
            tar czvf spotify_player-${{ matrix.target }}.tar.gz spotify_player
            shasum -a 256 spotify_player-${{ matrix.target }}.tar.gz > spotify_player-${{ matrix.target }}.sha256
            ;;
          esac;

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/spotify_player-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
